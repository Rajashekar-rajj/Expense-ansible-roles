- name: disable nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: installation
  ansible.builtin.package:
    name: "{{ item }}"
    state: present 
  loop:
  - nodejs
  - mysql

- name: adding user
  ansible.builtin.user:
    name: expense

- name: make a directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: download application code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip file
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: install depemdencies
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copy backend-service # copy works for without variables, with means template
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
    

- name: installing python packages
  ansible.builtin.pip: 
    name:
    - PyMySQL
    - boto3
    - botocore
    - cryptography
    executable: pip3.9


- name: import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    name: all
    state: import


  
